// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payload.proto

package badgeforce_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PayloadAction int32

const (
	PayloadAction_STOREPUBLICDATA PayloadAction = 0
)

var PayloadAction_name = map[int32]string{
	0: "STOREPUBLICDATA",
}
var PayloadAction_value = map[string]int32{
	"STOREPUBLICDATA": 0,
}

func (x PayloadAction) String() string {
	return proto.EnumName(PayloadAction_name, int32(x))
}
func (PayloadAction) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Payload struct {
	Action PayloadAction `protobuf:"varint,1,opt,name=action,enum=badgeforce_pb.PayloadAction" json:"action,omitempty"`
	Data   *AnyData      `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *Payload) Reset()                    { *m = Payload{} }
func (m *Payload) String() string            { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()               {}
func (*Payload) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Payload) GetAction() PayloadAction {
	if m != nil {
		return m.Action
	}
	return PayloadAction_STOREPUBLICDATA
}

func (m *Payload) GetData() *AnyData {
	if m != nil {
		return m.Data
	}
	return nil
}

type AnyData struct {
	Data *google_protobuf.Any `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *AnyData) Reset()                    { *m = AnyData{} }
func (m *AnyData) String() string            { return proto.CompactTextString(m) }
func (*AnyData) ProtoMessage()               {}
func (*AnyData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *AnyData) GetData() *google_protobuf.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type StorePublicDataPayload struct {
	Data *Account_PublicData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *StorePublicDataPayload) Reset()                    { *m = StorePublicDataPayload{} }
func (m *StorePublicDataPayload) String() string            { return proto.CompactTextString(m) }
func (*StorePublicDataPayload) ProtoMessage()               {}
func (*StorePublicDataPayload) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *StorePublicDataPayload) GetData() *Account_PublicData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Payload)(nil), "badgeforce_pb.Payload")
	proto.RegisterType((*AnyData)(nil), "badgeforce_pb.AnyData")
	proto.RegisterType((*StorePublicDataPayload)(nil), "badgeforce_pb.StorePublicDataPayload")
	proto.RegisterEnum("badgeforce_pb.PayloadAction", PayloadAction_name, PayloadAction_value)
}

func init() { proto.RegisterFile("payload.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x48, 0xac, 0xcc,
	0xc9, 0x4f, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4d, 0x4a, 0x4c, 0x49, 0x4f,
	0x4d, 0xcb, 0x2f, 0x4a, 0x4e, 0x8d, 0x2f, 0x48, 0x92, 0xe2, 0x4d, 0x4c, 0x4e, 0xce, 0x2f, 0xcd,
	0x2b, 0x81, 0xc8, 0x4a, 0x49, 0xa6, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0x79, 0x49, 0xa5,
	0x69, 0xfa, 0x89, 0x79, 0x95, 0x10, 0x29, 0xa5, 0x6c, 0x2e, 0xf6, 0x00, 0x88, 0x49, 0x42, 0x26,
	0x5c, 0x6c, 0x89, 0xc9, 0x25, 0x99, 0xf9, 0x79, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0x32,
	0x7a, 0x28, 0x86, 0xea, 0x41, 0xd5, 0x39, 0x82, 0xd5, 0x04, 0x41, 0xd5, 0x0a, 0x69, 0x71, 0xb1,
	0xa4, 0x24, 0x96, 0x24, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x1b, 0x89, 0xa1, 0xe9, 0x71, 0xcc,
	0xab, 0x74, 0x49, 0x2c, 0x49, 0x0c, 0x02, 0xab, 0x51, 0x32, 0xe6, 0x62, 0x87, 0x0a, 0x08, 0x69,
	0x40, 0xb5, 0x31, 0x82, 0xb5, 0x89, 0xe8, 0x41, 0x5c, 0xa8, 0x07, 0x73, 0x21, 0x48, 0x23, 0x54,
	0x93, 0x3f, 0x97, 0x58, 0x70, 0x49, 0x7e, 0x51, 0x6a, 0x40, 0x69, 0x52, 0x4e, 0x66, 0x32, 0x48,
	0x33, 0xcc, 0xc1, 0xa6, 0x28, 0x66, 0x28, 0xa2, 0x5b, 0x0d, 0x0d, 0x02, 0x84, 0x3e, 0x88, 0x81,
	0x5a, 0x2a, 0x5c, 0xbc, 0x28, 0x5e, 0x11, 0x12, 0xe6, 0xe2, 0x0f, 0x0e, 0xf1, 0x0f, 0x72, 0x0d,
	0x08, 0x75, 0xf2, 0xf1, 0x74, 0x76, 0x71, 0x0c, 0x71, 0x14, 0x60, 0x48, 0x62, 0x03, 0x3b, 0xc5,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x82, 0xea, 0x11, 0xb6, 0x69, 0x01, 0x00, 0x00,
}
